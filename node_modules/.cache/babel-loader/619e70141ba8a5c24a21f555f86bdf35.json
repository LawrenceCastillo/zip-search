{"ast":null,"code":"var _jsxFileName = \"/Users/Liang/Desktop/Hunter/TTP/Assignment/zip-search/src/components/zip.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport './zip.css';\nimport Definition from './definition'; // Zip should store all the results from the search\n\nclass Zip extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSearching: false,\n      isCity: false,\n      // this should store all the data fetched from the API\n      data: []\n    };\n    this.renderSearchView = this.renderSearchView.bind(this);\n    this.renderDefault = this.renderDefault.bind(this);\n    this.clearSearch = this.clearSearch.bind(this);\n    this.fetchZipData = this.fetchZipData.bind(this);\n    this.fetchCityData = this.fetchCityData.bind(this);\n  } // functions to bind\n  // 1) function pass into the button  to inititate everything\n  // 2) function to create element for each results and append to result container\n  // renderDefaultView to display nothing when there is no search\n  // renderSearchView to display something when there is a search\n  // optional - reset the search status to false when the user no longer wants to search anything\n  // }\n  // componentDidMount(){\n  //     this.fetchZipData();\n  //     this.interval = setInterval(() => this.fetchZipData(),60*100000);\n  // }\n\n\n  fetchZipData() {\n    // alert(\"testing\");\n    // console.log(this.refs.searchZip.value);\n    this.setState({\n      isSearching: true\n    });\n    axios.get(\"http://ctp-zip-api.herokuapp.com/zip/\" + this.refs.searchZip.value).then(response => {\n      var result = response.data; // var wanted = [];\n      // var result = response.data.filter(Zips => wanted.includes(Zips.Zipcode));\n\n      console.log(\"----------------------------------------------------------------\");\n      console.log(result);\n      console.log(\"----------------------------------------------------------------\");\n      this.setState({\n        data: result\n      });\n      console.log(this.state.data);\n    }).catch(err => console.log(err));\n  }\n\n  fetchCityData() {\n    // alert(\"testing\");\n    // console.log(this.refs.searchZip.value);\n    this.setState({\n      isSearching: true,\n      isCity: true\n    });\n    axios.get(\"http://ctp-zip-api.herokuapp.com/city/\" + this.refs.searchCity.value.toUpperCase()).then(response => {\n      var result = response.data; // var wanted = [];\n      // var result = response.data.filter(Zips => wanted.includes(Zips.Zipcode));\n\n      console.log(\"----------------------------------------------------------------\");\n      console.log(result);\n      console.log(\"----------------------------------------------------------------\");\n      this.setState({\n        data: result\n      });\n      console.log(this.state.data);\n    }).catch(err => console.log(err));\n  }\n\n  clearSearch() {\n    this.setState({\n      isSearching: false,\n      isCity: false\n    });\n  }\n\n  renderSearchView() {\n    if (this.state.isCity) {\n      return React.createElement(\"div\", {\n        className: \"cardContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"searchButton\",\n        onClick: this.clearSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Clear Search\"), this.state.data.map(info => React.createElement(\"div\", {\n        className: \"cityCard\",\n        key: info[\"City\"],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"cityName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, info[\"City\"], \", \", info[\"State\"]), React.createElement(\"ul\", {\n        className: \"cityInfo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"State: \", info[\"State\"]), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Location: (\", info[\"Lat\"], \" \", info[\"Long\"], \")\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Population(estimated): \", info[\"EstimatedPopulation\"], \" \"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Total Wages: \", info[\"TotalWages\"], \" \")))));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"cardContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"searchButton\",\n        onClick: this.clearSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Clear Search\"), this.state.data.map(zip => React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, zip)));\n    }\n  }\n\n  renderDefault() {\n    return React.createElement(\"div\", {\n      className: \"defaultSearchInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Enter Zip Code: \", React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Try 10016\",\n      ref: \"searchZip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.fetchZipData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Search\")), React.createElement(\"div\", {\n      className: \"search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Enter City: \", React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Try SPRINGFIELD\",\n      ref: \"searchCity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.fetchCityData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Search\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"No Results\"));\n  }\n\n  render() {\n    if (this.state.isSearching) {\n      return this.renderSearchView();\n    } else {\n      return this.renderDefault();\n    }\n  }\n\n}\n\nexport default Zip;","map":{"version":3,"sources":["/Users/Liang/Desktop/Hunter/TTP/Assignment/zip-search/src/components/zip.js"],"names":["React","Component","axios","Definition","Zip","constructor","props","state","isSearching","isCity","data","renderSearchView","bind","renderDefault","clearSearch","fetchZipData","fetchCityData","setState","get","refs","searchZip","value","then","response","result","console","log","catch","err","searchCity","toUpperCase","map","info","zip","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport './zip.css';\nimport Definition from './definition';\n\n// Zip should store all the results from the search\nclass Zip extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            isSearching: false,\n            isCity: false,\n            // this should store all the data fetched from the API\n            data: []\n        }\n\n        this.renderSearchView = this.renderSearchView.bind(this);\n        this.renderDefault = this.renderDefault.bind(this);\n        this.clearSearch = this.clearSearch.bind(this);\n        this.fetchZipData = this.fetchZipData.bind(this);\n        this.fetchCityData = this.fetchCityData.bind(this);\n    }\n        // functions to bind\n            // 1) function pass into the button  to inititate everything\n            // 2) function to create element for each results and append to result container\n            // renderDefaultView to display nothing when there is no search\n            // renderSearchView to display something when there is a search\n            // optional - reset the search status to false when the user no longer wants to search anything\n    // }\n    // componentDidMount(){\n    //     this.fetchZipData();\n    //     this.interval = setInterval(() => this.fetchZipData(),60*100000);\n    // }\n\n    fetchZipData(){\n      // alert(\"testing\");\n      // console.log(this.refs.searchZip.value);\n      this.setState({isSearching:true});\n        axios.get(\"http://ctp-zip-api.herokuapp.com/zip/\" + this.refs.searchZip.value)\n            .then(response => {\n              var result = response.data;\n                // var wanted = [];\n                // var result = response.data.filter(Zips => wanted.includes(Zips.Zipcode));\n                console.log(\"----------------------------------------------------------------\");\n                console.log(result);\n                console.log(\"----------------------------------------------------------------\");\n                this.setState({data: result});\n                console.log(this.state.data);\n            })\n            .catch(err => console.log(err));\n    }\n\n    fetchCityData(){\n      // alert(\"testing\");\n      // console.log(this.refs.searchZip.value);\n      this.setState({isSearching:true, isCity: true});\n        axios.get(\"http://ctp-zip-api.herokuapp.com/city/\" + this.refs.searchCity.value.toUpperCase())\n            .then(response => {\n              var result = response.data;\n                // var wanted = [];\n                // var result = response.data.filter(Zips => wanted.includes(Zips.Zipcode));\n                console.log(\"----------------------------------------------------------------\");\n                console.log(result);\n                console.log(\"----------------------------------------------------------------\");\n                this.setState({data: result});\n                console.log(this.state.data);\n            })\n            .catch(err => console.log(err));\n    }\n\n    clearSearch(){\n      this.setState({\n        isSearching: false,\n        isCity: false\n      });\n    }\n\n\n    renderSearchView(){\n      if(this.state.isCity){\n        return(\n          <div className=\"cardContainer\">\n            <button className=\"searchButton\" onClick={this.clearSearch}>Clear Search</button>\n              {this.state.data.map((info) =>\n\n                <div className=\"cityCard\" key={info[\"City\"]}>\n                    <h3 className=\"cityName\">{info[\"City\"]}, {info[\"State\"]}</h3>\n                    <ul className=\"cityInfo\" >\n                      <li>State: {info[\"State\"]}</li>\n                      <li>Location: ({info[\"Lat\"]} {info[\"Long\"]})</li>\n                      <li>Population(estimated): {info[\"EstimatedPopulation\"]} </li>\n                      <li>Total Wages: {info[\"TotalWages\"]} </li>\n                    </ul>\n                </div>\n\n              )}\n          </div>\n        );\n      } else {\n        return (\n          <div className=\"cardContainer\">\n            <button className=\"searchButton\" onClick={this.clearSearch}>Clear Search</button>\n            {this.state.data.map((zip) =>\n              <p>{zip}</p>\n            )}\n          </div>\n        );\n      }\n    }\n\n    renderDefault(){\n      return(\n        <div className=\"defaultSearchInput\">\n          <div className=\"search\">\n            Enter Zip Code: <input type=\"text\" placeholder=\"Try 10016\" ref=\"searchZip\"/>\n            <button onClick={this.fetchZipData}>Search</button>\n          </div>\n\n          <div className=\"search\">\n            Enter City: <input type=\"text\" placeholder=\"Try SPRINGFIELD\" ref=\"searchCity\"/>\n            <button onClick={this.fetchCityData}>Search</button>\n          </div>\n\n\n          <p>No Results</p>\n        </div>\n      )\n    }\n\n    render(){\n      if(this.state.isSearching){\n        return this.renderSearchView();\n      } else {\n        return this.renderDefault();\n      }\n    }\n}\n\nexport default Zip;\n"]},"metadata":{},"sourceType":"module"}