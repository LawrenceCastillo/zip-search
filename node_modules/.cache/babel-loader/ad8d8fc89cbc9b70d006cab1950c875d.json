{"ast":null,"code":"var _jsxFileName = \"/Users/lawrencecastillo/OneDrive - Hunter - CUNY/cuny2x/Homeworks/zip-search/src/components/zip.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport './zip.css'; // Zip should store all the results from the search\n\nclass Zip extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // this should store all the data fetched from the API\n      data: [{\n        zip: \"10028\",\n        city: \"City\",\n        state: \"State\",\n        latitude: \"Lat\",\n        longitude: \"Long\",\n        population: \"EstimatePopulation\",\n        wages: \"TotalWages\"\n      }]\n    };\n  }\n\n  fetchZipData() {\n    axios.get(\"http://ctp-zip-api.herokuapp.com/zip/:zipcode\").then(response => {\n      var wanted = [\"10028\"];\n      var result = response.data.filter(zipcode => wanted.includes(zipcode.zip));\n      this.setState({\n        data: result\n      });\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    console.log(\"Here\"); //var city = this.state.data.map((zipcode) =>\n    //data definition\n    // <data={zipcode} key={zipcode.zip} />\n    //);\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    });\n  } // functions to bind\n  // 1) function pass into the button  to inititate everything\n  // 2) function to create element for each results and append to result container\n  // renderDefaultView to display nothing when there is no search\n  // renderSearchView to display something when there is a search\n  // optional - reset the search status to false when the user no longer wants to search anything \n\n\n}\n\nexport default Zip;","map":{"version":3,"sources":["/Users/lawrencecastillo/OneDrive - Hunter - CUNY/cuny2x/Homeworks/zip-search/src/components/zip.js"],"names":["React","Component","axios","Zip","constructor","props","state","data","zip","city","latitude","longitude","population","wages","fetchZipData","get","then","response","wanted","result","filter","zipcode","includes","setState","catch","err","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP,C,CAEA;;AACA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAExBG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACT;AACAC,MAAAA,IAAI,EAAE,CACF;AACIC,QAAAA,GAAG,EAAE,OADT;AAEIC,QAAAA,IAAI,EAAE,MAFV;AAGIH,QAAAA,KAAK,EAAE,OAHX;AAIII,QAAAA,QAAQ,EAAE,KAJd;AAKIC,QAAAA,SAAS,EAAE,MALf;AAMIC,QAAAA,UAAU,EAAE,oBANhB;AAOIC,QAAAA,KAAK,EAAE;AAPX,OADE;AAFG,KAAb;AAcH;;AAEDC,EAAAA,YAAY,GAAE;AACVZ,IAAAA,KAAK,CAACa,GAAN,CAAU,+CAAV,EACKC,IADL,CACUC,QAAQ,IAAI;AACd,UAAIC,MAAM,GAAG,CAAC,OAAD,CAAb;AACA,UAAIC,MAAM,GAAGF,QAAQ,CAACV,IAAT,CAAca,MAAd,CAAqBC,OAAO,IAAIH,MAAM,CAACI,QAAP,CAAgBD,OAAO,CAACb,GAAxB,CAAhC,CAAb;AACA,WAAKe,QAAL,CAAc;AAAChB,QAAAA,IAAI,EAAEY;AAAP,OAAd;AACH,KALL,EAMKK,KANL,CAMWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CANlB;AAOH;;AACDG,EAAAA,MAAM,GAAE;AACJF,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EADI,CAEJ;AACI;AACA;AACJ;;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH,GAtCuB,CAuCpB;AACI;AACA;AACA;AACA;AACA;;;AA5CgB;;AA+C5B,eAAexB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport './zip.css';\n\n// Zip should store all the results from the search\nclass Zip extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            // this should store all the data fetched from the API\n            data: [\n                {\n                    zip: \"10028\",\n                    city: \"City\",\n                    state: \"State\",\n                    latitude: \"Lat\",\n                    longitude: \"Long\",\n                    population: \"EstimatePopulation\",\n                    wages: \"TotalWages\"\n                }\n            ]\n        };\n    }\n\n    fetchZipData(){\n        axios.get(\"http://ctp-zip-api.herokuapp.com/zip/:zipcode\")\n            .then(response => {\n                var wanted = [\"10028\"];\n                var result = response.data.filter(zipcode => wanted.includes(zipcode.zip));\n                this.setState({data: result});\n            })\n            .catch(err => console.log(err));\n    }\n    render(){\n        console.log(\"Here\");\n        //var city = this.state.data.map((zipcode) =>\n            //data definition\n            // <data={zipcode} key={zipcode.zip} />\n        //);\n        return(\n            <div></div>\n        );\n    }\n        // functions to bind\n            // 1) function pass into the button  to inititate everything\n            // 2) function to create element for each results and append to result container\n            // renderDefaultView to display nothing when there is no search\n            // renderSearchView to display something when there is a search\n            // optional - reset the search status to false when the user no longer wants to search anything \n}\n\nexport default Zip;"]},"metadata":{},"sourceType":"module"}